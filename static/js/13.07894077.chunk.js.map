{"version":3,"file":"static/js/13.07894077.chunk.js","mappings":"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","sources":["components/MovieDescription/MovieDescription,styled.js","components/MovieDescription/MovieDescription.js","pages/MoviesDetails.styled.js","pages/MoviesDetails.js","services/MovieAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst DescriptionView = styled.div`\n  display: flex;\n  column-gap: 10px;\n`;\n\nconst ImageWrapper = styled.div`\n  width: 500px;\n`;\n\nconst DescriptionList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  row-gap: 25px;\n  margin-bottom: 25px;\n`;\n\nconst DescriptionListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  row-gap: 15px;\n`;\n\nexport { ImageWrapper, DescriptionList, DescriptionView, DescriptionListItem };\n","import PropTypes from 'prop-types';\nimport {\n  DescriptionList,\n  DescriptionView,\n  ImageWrapper,\n  DescriptionListItem,\n} from './MovieDescription,styled';\n\nconst MovieDescription = ({ movie }) => {\n  const {\n    poster_path,\n    genres,\n    vote_count,\n    original_title,\n    overview,\n    release_date,\n  } = movie;\n  const genresString = genres && genres.map(genre => genre.name).join(',');\n  const score = vote_count / 100;\n\n  return (\n    <DescriptionView>\n      <ImageWrapper>\n        <img\n          src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n          alt={original_title}\n        />\n      </ImageWrapper>\n      <DescriptionList>\n        <DescriptionListItem>\n          <h1>{original_title}</h1>\n          <p>{release_date}</p>\n        </DescriptionListItem>\n        <DescriptionListItem>\n          <p>User score: {score.toFixed(2)}%</p>\n        </DescriptionListItem>\n        <DescriptionListItem>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n        </DescriptionListItem>\n        <DescriptionListItem>\n          <h3>Genres</h3>\n          <p>{genresString}</p>\n        </DescriptionListItem>\n      </DescriptionList>\n    </DescriptionView>\n  );\n};\n\nexport default MovieDescription;\n\nMovieDescription.propTypes = {\n  movie: PropTypes.object.isRequired,\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst InformationLinksList = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  row-gap: 5px;\n  margin-top: 10px;\n  margin-bottom: 20px;\n`;\n\nconst GoBackBtn = styled(Link)`\n  display: inline-block;\n  padding: 5px;\n  text-align: center;\n  text-decoration: none;\n  color: white;\n  background: black;\n  border-radius: 5px;\n  margin-bottom: 15px;\n`;\n\nexport { GoBackBtn, InformationLinksList };\n","import { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { useEffect, useState, Suspense } from 'react';\nimport { getMovieById } from 'services/MovieAPI';\nimport MovieDescription from 'components/MovieDescription/MovieDescription';\nimport { GoBackBtn, InformationLinksList } from './MoviesDetails.styled';\n\nconst MoviesDetailsPage = () => {\n  const [movie, setMovie] = useState({});\n  const params = useParams();\n  const movieId = params.movieId;\n  const location = useLocation();\n  const backLinkhref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    getMovieById(movieId, abortController).then(\n      movie => movie && setMovie(movie)\n    );\n\n    return () => abortController.abort();\n  }, [movieId]);\n\n  return (\n    <section>\n      <GoBackBtn to={backLinkhref}>Go back</GoBackBtn>\n      <MovieDescription movie={movie} />\n\n      <h4>Additional information</h4>\n      <InformationLinksList>\n        <li>\n          <Link to={'cast'} state={{ from: backLinkhref }}>\n            Casts\n          </Link>\n        </li>\n        <li>\n          <Link to={'reviews'} state={{ from: backLinkhref }}>\n            Reviews\n          </Link>\n        </li>\n      </InformationLinksList>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </section>\n  );\n};\n\nexport default MoviesDetailsPage;\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '6dbb7affd9e1114a59f95efe62ebacfd';\n\nexport const getTrendingMovies = async abortController => {\n  const source = 'trending/movie/day';\n  const url = `${source}?api_key=${API_KEY}`;\n\n  try {\n    const response = await axios.get(url, { signal: abortController.signal });\n    return response.data;\n  } catch (error) {\n    if (error.code === 'ERR_CANCELED') return;\n    console.error(error.message);\n  }\n};\n\nexport const getMovieByQuery = async (query, abortController) => {\n  const source = 'search/movie';\n  const url = `${source}?api_key=${API_KEY}&query=${query}`;\n\n  try {\n    const response = await axios.get(url, { signal: abortController.signal });\n    return response.data;\n  } catch (error) {\n    if (error.code === 'ERR_CANCELED') return;\n    console.error(error.message);\n  }\n};\n\nexport const getMovieById = async (movieId, abortController) => {\n  const url = `/movie/${movieId}?api_key=${API_KEY}`;\n\n  try {\n    const response = await axios.get(url, { signal: abortController.signal });\n    return response.data;\n  } catch (error) {\n    if (error.code === 'ERR_CANCELED') return;\n    console.error(error.message);\n  }\n};\n\nexport const getMovieDetails = async (movieId, details, abortController) => {\n  const source = `/movie/${movieId}/${details}`;\n  const url = `${source}?api_key=${API_KEY}`;\n\n  try {\n    const response = await axios.get(url, { signal: abortController.signal });\n    return response.data;\n  } catch (error) {\n    if (error.code === 'ERR_CANCELED') return;\n    console.error(error.message);\n  }\n};\n"],"names":["DescriptionView","styled","ImageWrapper","DescriptionList","DescriptionListItem","movie","poster_path","genres","vote_count","original_title","overview","release_date","genresString","map","genre","name","join","score","src","alt","toFixed","InformationLinksList","GoBackBtn","Link","useState","setMovie","movieId","useParams","backLinkhref","useLocation","state","from","useEffect","abortController","AbortController","getMovieById","then","abort","to","Suspense","fallback","axios","API_KEY","getTrendingMovies","url","signal","response","data","code","console","error","message","getMovieByQuery","query","getMovieDetails","details","source"],"sourceRoot":""}