{"version":3,"file":"static/js/688.1208457e.chunk.js","mappings":"sMAEMA,E,OAAYC,GAAAA,GAAH,iI,SCkBf,EAhBmB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACJ,EAAD,UACGE,EAAOG,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,SACGG,EAAMK,kBAFFL,EAAME,GADA,KAStB,C,sHChBKI,E,OAAQX,GAAAA,GAAH,sE,SC0BX,EAvBiB,WACf,OAA4BY,EAAAA,EAAAA,UAAS,IAArC,eAAOX,EAAP,KAAeY,EAAf,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,IAAIC,gBAM5B,OAJAC,EAAAA,EAAAA,IAAkBF,GAAiBG,MACjC,SAAAjB,GAAM,OAAIA,GAAUY,EAAUZ,EAAOkB,QAA/B,IAGD,WACLJ,EAAgBK,OACjB,CACF,GAAE,KAGD,gCACE,SAACT,EAAD,8BACA,SAACU,EAAA,EAAD,CAAYpB,OAAQA,MAGzB,C,uKCzBDqB,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAEHN,EAAiB,mCAAG,WAAMF,GAAN,+EAChB,qBACTS,EAFyB,UAChB,qBADgB,oBAEED,GAFF,kBAKND,EAAAA,EAAAA,IAAUE,EAAK,CAAEC,OAAQV,EAAgBU,SALnC,cAKvBC,EALuB,yBAMtBA,EAASC,MANa,mCAQV,iBAAf,KAAMC,KARmB,mDAS7BC,QAAQC,MAAM,KAAMC,SATS,yDAAH,sDAajBC,EAAe,mCAAG,WAAOC,EAAOlB,GAAd,+EACd,eACTS,EAFuB,UACd,eADc,oBAEID,EAFJ,kBAEqBU,GAFrB,kBAKJX,EAAAA,EAAAA,IAAUE,EAAK,CAAEC,OAAQV,EAAgBU,SALrC,cAKrBC,EALqB,yBAMpBA,EAASC,MANW,mCAQR,iBAAf,KAAMC,KARiB,mDAS3BC,QAAQC,MAAM,KAAMC,SATO,yDAAH,wDAafG,EAAY,mCAAG,WAAOC,EAASpB,GAAhB,gFACpBS,EADoB,iBACJW,EADI,oBACeZ,GADf,kBAIDD,EAAAA,EAAAA,IAAUE,EAAK,CAAEC,OAAQV,EAAgBU,SAJxC,cAIlBC,EAJkB,yBAKjBA,EAASC,MALQ,mCAOL,iBAAf,KAAMC,KAPc,mDAQxBC,QAAQC,MAAM,KAAMC,SARI,yDAAH,wDAYZK,EAAe,mCAAG,WAAOD,EAASE,EAAStB,GAAzB,kFACvBuB,EADuB,iBACJH,EADI,YACOE,GAC9Bb,EAFuB,UAEdc,EAFc,oBAEIf,GAFJ,kBAKJD,EAAAA,EAAAA,IAAUE,EAAK,CAAEC,OAAQV,EAAgBU,SALrC,cAKrBC,EALqB,yBAMpBA,EAASC,MANW,mCAQR,iBAAf,KAAMC,KARiB,mDAS3BC,QAAQC,MAAM,KAAMC,SATO,yDAAH,yD","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.js","pages/Home.styled.js","pages/Home.js","services/MovieAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst MoviesMap = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  row-gap: 5px;\n  margin-left: 15px;\n`;\n\nexport { MoviesMap };\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { MoviesMap } from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <MoviesMap>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.original_title}\n          </Link>\n        </li>\n      ))}\n    </MoviesMap>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n","import styled from 'styled-components';\n\nconst Title = styled.h1`\n  margin-bottom: 15px;\n  margin-left: 15px;\n`;\n\nexport { Title };\n","import { useEffect, useState } from 'react';\nimport { getTrendingMovies } from 'services/MovieAPI';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { Title } from './Home.styled';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    getTrendingMovies(abortController).then(\n      movies => movies && setMovies(movies.results)\n    );\n\n    return () => {\n      abortController.abort();\n    };\n  }, []);\n\n  return (\n    <section>\n      <Title>Trending today</Title>\n      <MoviesList movies={movies} />\n    </section>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '6dbb7affd9e1114a59f95efe62ebacfd';\n\nexport const getTrendingMovies = async abortController => {\n  const source = 'trending/movie/day';\n  const url = `${source}?api_key=${API_KEY}`;\n\n  try {\n    const response = await axios.get(url, { signal: abortController.signal });\n    return response.data;\n  } catch (error) {\n    if (error.code === 'ERR_CANCELED') return;\n    console.error(error.message);\n  }\n};\n\nexport const getMovieByQuery = async (query, abortController) => {\n  const source = 'search/movie';\n  const url = `${source}?api_key=${API_KEY}&query=${query}`;\n\n  try {\n    const response = await axios.get(url, { signal: abortController.signal });\n    return response.data;\n  } catch (error) {\n    if (error.code === 'ERR_CANCELED') return;\n    console.error(error.message);\n  }\n};\n\nexport const getMovieById = async (movieId, abortController) => {\n  const url = `/movie/${movieId}?api_key=${API_KEY}`;\n\n  try {\n    const response = await axios.get(url, { signal: abortController.signal });\n    return response.data;\n  } catch (error) {\n    if (error.code === 'ERR_CANCELED') return;\n    console.error(error.message);\n  }\n};\n\nexport const getMovieDetails = async (movieId, details, abortController) => {\n  const source = `/movie/${movieId}/${details}`;\n  const url = `${source}?api_key=${API_KEY}`;\n\n  try {\n    const response = await axios.get(url, { signal: abortController.signal });\n    return response.data;\n  } catch (error) {\n    if (error.code === 'ERR_CANCELED') return;\n    console.error(error.message);\n  }\n};\n"],"names":["MoviesMap","styled","movies","location","useLocation","map","movie","to","id","state","from","original_title","Title","useState","setMovies","useEffect","abortController","AbortController","getTrendingMovies","then","results","abort","MoviesList","axios","API_KEY","url","signal","response","data","code","console","error","message","getMovieByQuery","query","getMovieById","movieId","getMovieDetails","details","source"],"sourceRoot":""}